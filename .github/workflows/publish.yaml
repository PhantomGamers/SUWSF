name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Check Tag
      id: check-tag
      uses: actions-ecosystem/action-regex-match@v2
      with:
        text: ${{ github.event.ref }}
        regex: '^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'

    - name: Fail if invalid
      if: steps.check-tag.outputs.match == ''
      uses: Actions/github-script@v3
      with:
        script: |
          core.setFailed('Invalid tag')
    
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Build for release
      run: |
        msbuild SUWSF/SUWSF.vcxproj -t:Restore
        msbuild SUWSF/SUWSF.vcxproj
        external/Ultimate-ASI-Loader/premake5.bat
        msbuild external/Ultimate-ASI-Loader/build/Ultimate-ASI-Loader-x64.vcxproj -t:Restore -t:Build -p:Configuration=Release -p:Platform=x64 -p:TargetName=dsound -p:OutDir="../../../x64/Release"
    
    - name: Prepare for release
      run: |
        rm x64/Release/*.pdb
        copy README.md x64/Release/
        copy LICENSE x64/Release/
        copy SUWSF.ini x64/Release/

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: "x64/Release/*"
        name: "SUWSF-${{ github.event.ref }}"
        draft: true
    

    
